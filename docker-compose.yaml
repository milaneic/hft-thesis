services:
  ## GraphQL SQL
  db:
    container_name: db
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQLDB_ROOT_PASSWORD
      MYSQL_USER: $MYSQLDB_USER
      MYSQL_PASSWORD: $MYSQLDB_PASSWORD
    ports:
      - ${MYSQLDB_PORT}:${MYSQLDB_PORT}
    volumes:
      - sql_volume:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
    networks:
      - thesis-network
  ## REST SQL
  db2:
    container_name: db_rest
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQLDB_ROOT_PASSWORD
      MYSQL_USER: $MYSQLDB_USER
      MYSQL_PASSWORD: $MYSQLDB_PASSWORD
    ports:
      - 3307:${MYSQLDB_PORT}
    volumes:
      - sql_volume:/var/lib/mysql2
      - ./db:/docker-entrypoint-initdb.d
    networks:
      - thesis-network
  ## GraphQL Backend SQL
  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    depends_on:
      - db
    env_file:
      - path: .env.backend
        required: true
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    networks:
      - thesis-network

  ## MONGO ORM
  mongodb:
    image: mongo:latest
    container_name: mongo_orm_db
    restart: always
    networks:
      - thesis-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
      MONGO_INITDB_DATABASE: $MONGO_INITDB_DATABASE
    ports:
      - $MONGOORM_INITDB_PORT:$MONGO_INITDB_PORT
    volumes:
      - mongoorm_volume:/var/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo:
    image: mongo:latest
    container_name: mongo_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
      MONGO_INITDB_DATABASE: $MONGO_INITDB_DATABASE
    ports:
      - $MONGO_INITDB_PORT:$MONGO_INITDB_PORT
    networks:
      - thesis-network
    volumes:
      - mongo_volume:/var/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

networks:
  thesis-network:
volumes:
  sql_volume:
  mongoorm_volume:
  mongo_volume:
