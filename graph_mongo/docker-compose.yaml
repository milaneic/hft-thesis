services:
  db:
    image: mongo:latest
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
    ports:
      - $MONGO_INITDB_PORT:$MONGO_INITDB_PORT
    volumes:
      - mongo_volume:/var/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./backup:/backup
      - ./mongorestore.sh:/docker-entrypoint-initdb.d/mongorestore.sh
    networks:
      - graph-mongo-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_mongo
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - /usr/src/app/node_modules
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    networks:
      - graph-mongo-network

  frontend:
    container_name: frontend_mongo
    restart: unless-stopped
    build:
      context: ../frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    environment:
      NEXTAUTH_URL: http://localhost:3003
      NEXT_PUBLIC_BACKEND_URL: http://host.docker.internal:8083
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - 3003:${FRONTEND_PORT}
    networks:
      - graph-mongo-network

networks:
  graph-mongo-network:
    driver: bridge
volumes:
  mongo_volume:
